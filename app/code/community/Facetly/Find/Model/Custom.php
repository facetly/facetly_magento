<?phpclass Facetly_Find_Model_Custom extends Mage_Core_Model_Abstract{    protected function _construct(){        $this->_init('find/custom');		$Facetly_Library = Mage::getModuleDir('', 'Facetly_Find').DS.'Model'.DS.'facetly_api.php';		require_once ($Facetly_Library);	}		public function searchItem($param){		$query = $param['query'];				$facetly = new facetly_api;		$api_server = Mage::getStoreConfig('facetly_server');		$api_path = "search/product";		$api_method = "GET";		$consumer_key = Mage::getStoreConfig('facetly_consumer_key');		$add_var = Mage::getStoreConfig('facetly_additional_variable');		$uri = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB).'find';				$api_data = array(		  "key" => $consumer_key,		  "limit" => $param['limit'],		  "searchtype" => 'html',		  "baseurl" => $uri,		  "query" => $query,		);		$api_data = array_merge($_GET,$api_data);		$facetly->setServer($api_server);		$api_output = $facetly->call($api_path, $api_data, $api_method);		$facetly_output = json_decode($api_output);			 		return $facetly_output;	}		public function loadGroupProduct($page,$limit){		$config = Mage::getModel('find/custom');		$attribute = $config->loadFacetlySelectedAttribute();				//get col		$products = Mage::getModel('catalog/product')->getCollection();					//dynamic var		$products->addAttributeToSelect('*');				//check always enable		$products->addAttributeToFilter('status', 1);				//size		$products->setCurPage($page)->setPageSize($limit);				foreach($products as $product) {			$loadData = $config->convertData($product,$attribute);			$output[] = $loadData;		}		return $output;	}		public function loadProductById($id_product){		$config = Mage::getModel('find/custom');		$attribute = $config->loadFacetlySelectedAttribute();		$product = Mage::getModel('catalog/product')->load($id_product);				$loadData = $config->convertData($product,$attribute);				return $loadData;	}		public function convertData($product,$attribute){		$data = $product->getData();		$loadData = array();				$loadData['id'] = $data['entity_id'];		foreach($attribute as $val => $value){			if($value == 'image_label'){				try{					$loadData[$val] = $product->getImageUrl();				}catch(Exception $e){					$loadData[$val] = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB).'skin/frontend/default/default/images/catalog/product/placeholder/image.jpg';				}			}			else if($value == 'url_path'){				$loadData[$val] = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB).$data[$value];			}			else if($value == 'url_key'){				$loadData[$val] = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_WEB).$data[$value].'.html';			}			else if($value == 'created_at'){				$loadData[$val] = strtotime($data[$value])*1000;			}			else if($value == 'category_ids'){				$categoryIds = $product->getCategoryIds();				$config = Mage::getModel('find/custom');				$cats = $config->fullCats($categoryIds[0]);				$loadData[$val] = $cats;			}			else{				$loadData[$val] = $data[$value];			}		}		return $loadData;	}		public function fullCats($categoryId){		$chain_cats[] = $categoryId;		do{			$configCategory = Mage::getModel('catalog/category')->setStoreId(Mage::app()->getStore()->getId());			$category =	$configCategory->load($categoryId);			$parents = $category->getParentId();			$level = $category->getLevel();			if($level<2) break;			$categoryId = $parents;			$chain_cats[] = $categoryId;		}		while($level>2);					$category = Mage::getModel('catalog/category'); 		$tree = $category->getTreeModel(); 		$tree->load();		$ids = $tree->getCollection()->getAllIds(); 		$arr = array();		if ($ids){ 			foreach ($ids as $id){ 				$cat = Mage::getModel('catalog/category'); 				$cat->load($id);				$arr[$id] = $cat->getName();			} 		}			foreach($chain_cats as $val => $value){			if(empty($output)){				$output = $arr[$value];			}else{				$output = $arr[$value].';'.$output;			}		}		return $output;	}		public function pushItem($data){		$id_product = $data['id'];		$facetly = new facetly_api;		$api_server = Mage::getStoreConfig('facetly_server');		$consumer_key = Mage::getStoreConfig('facetly_consumer_key');		$consumer_secret = Mage::getStoreConfig('facetly_secret_key');		$api_path = "product/insert";		$api_method = "POST";				$api_data = array(			"key" => $consumer_key,			"secret" => $consumer_secret,			"id" => $id_product,		);				foreach($data as $val => $value){			if($val == 'entity_id') continue;			$api_data[$val] = $value;		}		$facetly->setServer($api_server);		$api_output = $facetly->call($api_path, $api_data, $api_method);		$return = json_decode($api_output);		return $return;	}		public function deleteItem($id_product){				$facetly = new facetly_api;		$api_server = Mage::getStoreConfig('facetly_server');		$consumer_key = Mage::getStoreConfig('facetly_consumer_key');		$consumer_secret = Mage::getStoreConfig('facetly_secret_key');		$api_path = "product/delete";		$api_method = "POST";		$api_data = array(		  "key" => $consumer_key,		  "secret" => $consumer_secret,		  "id" => $id_product,		);		$facetly->setServer($api_server);		$api_output = $facetly->call($api_path, $api_data, $api_method);		$return = json_decode($api_output);		return $return;	}		public function facetlyTruncate(){		$facetly = new facetly_api;		$api_server = Mage::getStoreConfig('facetly_server');		$consumer_key = Mage::getStoreConfig('facetly_consumer_key');		$consumer_secret = Mage::getStoreConfig('facetly_secret_key');		$api_path = "product/truncate";		$api_method = "POST";		$api_data = array(		  "key" => $consumer_key,		  "secret" => $consumer_secret,		);		$facetly->setServer($api_server);		$api_output = $facetly->call($api_path, $api_data, $api_method);		$return = json_decode($api_output);		return $return;	}		public function setAPI(){				$postData = Mage::app()->getRequest()->getPost();  		if(!empty($postData)){			$consumer_key    = trim($postData['facetly_consumer_key']);			$secret_key      = trim($postData['facetly_consumer_secret']);			$server_name     = trim($postData['facetly_server_name']);			$limit           = trim($postData['facetly_search_limit']);			$additional_var  = trim($postData['facetly_additional_variable']);						if(!empty($consumer_key) && !empty($secret_key) && !empty($server_name) && is_numeric($limit) && !empty($additional_var) ){				Mage::getConfig()->saveConfig('facetly_consumer_key', $consumer_key);				Mage::getConfig()->saveConfig('facetly_secret_key', $secret_key);				Mage::getConfig()->saveConfig('facetly_server', $server_name);  				Mage::getConfig()->saveConfig('facetly_limit', $limit);  				Mage::getConfig()->saveConfig('facetly_additional_variable', $additional_var);				Mage::getConfig()->reinit();				Mage::app()->reinitStores();				return 1;			}			else{				return 2;			}		}	}		public function setField(){		$postData = Mage::app()->getRequest()->getPost(); 				if(!empty($postData)){			$config = Mage::getModel('find/custom');			$full_field = $config->loadFacetlyField();						if(!empty($full_field)){				$field = $full_field->field; 				foreach($field as $val => $value){					$temporary = NULL;					$temporary = $postData['field_'.$value->name];					Mage::getConfig()->saveConfig('facetly_field_'.$value->name, $temporary);				}				Mage::getConfig()->reinit();				Mage::app()->reinitStores();				return 1;			}else{				return 2;			}		}				}		public function setTemplate(){		$postData = Mage::app()->getRequest()->getPost();				if(!empty($postData)){			$facetly_search_template = $postData['facetly_search_template'];			$facetly_facet_template = $postData['facetly_facet_template'];						if(!empty($facetly_search_template) && !empty($facetly_facet_template)){				Mage::getConfig()->saveConfig('facetly_search_template', $facetly_search_template);				Mage::getConfig()->saveConfig('facetly_facet_template', $facetly_facet_template);								Mage::getConfig()->reinit();				Mage::app()->reinitStores();								$consumer_secret = strtolower(Mage::getStoreConfig('facetly_secret_key'));				$consumer_key = strtolower(Mage::getStoreConfig('facetly_consumer_key'));				$path_server = Mage::getStoreConfig('facetly_server'). "/template/update";				$post = array(							"key" => $consumer_key,							"secret" => $consumer_secret,							"tplsearch" => $facetly_search_template,							"tplfacet" => $facetly_facet_template,				);									$Curl_Session = curl_init($path_server);				curl_setopt ($Curl_Session, CURLOPT_POST, 1);				curl_setopt ($Curl_Session, CURLOPT_POSTFIELDS, $post);				curl_setopt ($Curl_Session, CURLOPT_FOLLOWLOCATION, 1);				curl_setopt ($Curl_Session, CURLOPT_RETURNTRANSFER, 1);				$output = curl_exec ($Curl_Session);				$header = curl_getinfo($Curl_Session);				curl_close ($Curl_Session);				return $output;						}		}	}		public function loadFacetlyField(){			if (empty($var)){			$consumer_secret = strtolower(Mage::getStoreConfig('facetly_secret_key'));			$consumer_key = strtolower(Mage::getStoreConfig('facetly_consumer_key'));			$path_server = Mage::getStoreConfig('facetly_server'). "/field/select";									$post = array(					"key" => $consumer_key,					"secret" => $consumer_secret,			);			$Curl_Session = curl_init($path_server);			curl_setopt ($Curl_Session, CURLOPT_POST, 1);			curl_setopt ($Curl_Session, CURLOPT_POSTFIELDS, $post);			curl_setopt ($Curl_Session, CURLOPT_RETURNTRANSFER, 1);			curl_setopt ($Curl_Session, CURLOPT_FOLLOWLOCATION, 1);			$output = curl_exec ($Curl_Session);			curl_close ($Curl_Session);			$var = json_decode($output);		}				return $var;	}		public function loadFacetlySelectedAttribute(){		$config = Mage::getModel('find/custom');				$full_field = $config->loadFacetlyField();								$field = $full_field->field; 				$saved_attribute = '';		foreach($field as $val => $value){			$saved_attribute[$value->name] = Mage::getStoreConfig('facetly_field_'.$value->name);		}				return $saved_attribute;	}		public function loadFacetlyDefaultTemplate(){			if (empty($var)){			$consumer_secret = strtolower(Mage::getStoreConfig('facetly_secret_key'));			$consumer_key = strtolower(Mage::getStoreConfig('facetly_consumer_key'));			$path_server = Mage::getStoreConfig('facetly_server'). "/template/select";									$post = array(					"key" => $consumer_key,					"secret" => $consumer_secret,			);			$Curl_Session = curl_init($path_server);			curl_setopt ($Curl_Session, CURLOPT_POST, 1);			curl_setopt ($Curl_Session, CURLOPT_POSTFIELDS, $post);			curl_setopt ($Curl_Session, CURLOPT_RETURNTRANSFER, 1);			curl_setopt ($Curl_Session, CURLOPT_FOLLOWLOCATION, 1);			$output = curl_exec ($Curl_Session);			curl_close ($Curl_Session);			$var = json_decode($output);		}				return $var;		}		public function loadAttribute(){		$entityTypeId = Mage::getModel('eav/entity')						->setType('catalog_product')						->getTypeId();		$attributeSetName   = 'Default'; 		$attributeSetId     = Mage::getModel('eav/entity_attribute_set')							->getCollection()							->setEntityTypeFilter($entityTypeId)							->addFieldToFilter('attribute_set_name', $attributeSetName)							->getFirstItem()							->getAttributeSetId();		$attributes = Mage::getModel('catalog/product_attribute_api')->items($attributeSetId);		return $attributes;	}} 